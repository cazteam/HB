<?php

namespace Em\BackendBundle\Repository;
use Em\BackendBundle\Entity\Villes;
use Em\BackendBundle\Entity\Typeimmo;
use Em\BackendBundle\Entity\Statusimmo;

/**
 * BienimmoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BienimmoRepository extends \Doctrine\ORM\EntityRepository
{

    public function  recupListeImmoByCountry($entity){
        $qb = $this->createQueryBuilder('a');
        $qb->select(array('a'));
        $qb->join('a.villes', 'v');
        $qb->join('v.pays', 'p');
        $qb->where('a.locked = :locked');
        $qb->andwhere('p.id = :pays');
        $qb->setParameters(array('locked' => false, 'pays'=> $entity ));
        $qb->orderBy('a.grade' , 'DESC');
        return $qb->getQuery()->getResult();
    }
    public function  recupListeImmoByCountryAndSlug($entity , $slug){
        $qb = $this->createQueryBuilder('a');
        $qb->select(array('a'));
        $qb->join('a.statusimmo', 'statim');
        $qb->join('a.villes', 'v');
        $qb->join('v.pays', 'p');
        $qb->where('a.locked = :locked');
        $qb->andwhere('p.id = :pays');
        $qb->andWhere('statim.slug = :slug');
        $qb->setParameters(array('locked' => false, 'pays'=> $entity, 'slug'=> $slug  ));
        $qb->orderBy('a.id' , 'DESC');
        return $qb->getQuery()->getResult();
    }
    public function  recupListeImmoBy($slug){
        $qb = $this->createQueryBuilder('b');
        $qb->select(array('b'));
        $qb->join('b.statusimmo', 's');
        $qb->where('b.locked = :locked');
        $qb->andWhere('s.slug = :slug');
        $qb->setParameters(array('locked' => false, 'slug'=> $slug ));
        $qb->orderBy('b.id' , 'DESC');
        return $qb->getQuery()->getResult();
    }

   /* public function  findHomeSearch($location , $type, $nbrepiece){
        $qb = $this->createQueryBuilder('b');
        $qb->select(array('b'));
       // $qb->join('b.statusimmo', 's');
        $qb->join('b.typeimmo', 't');
        $qb->join('b.villes', 'v');
        $qb->where('b.locked = :locked');
        $qb->andWhere('b.nbrepiece = :nbrepiece');
        $qb->andWhere('t.id = :typeimmo');
        $qb->andWhere('v.id = :villes');
        $qb->setParameters(array('locked' => false, 'nbrepiece'=> $nbrepiece ,
            'typeimmo' => $type,
            'villes' => $location));
        $qb->orderBy('b.id' , 'DESC');
        return $qb->getQuery()->getResult();
    }*/

    public function  findHomeSearch($location ,  $nbrepiece){
        $qb = $this->createQueryBuilder('b');
        $qb->select(array('b'));
        //* $qb->join('b.statusimmo', 's');
        //  $qb->join('b.typeimmo', 't');
        //  $qb->join('b.villes', 'v');
        $qb->where('b.locked = :locked');
        // $qb->andWhere('t.id = :typeimmo');
        $qb->andWhere('b.ville LIKE :ville');
        $qb->setParameters(
            array(
                'locked' => false,
                //     'typeimmo' => $type,
                'ville' => $location));
        $qb->orderBy('b.prix' , 'ASC');
        return $qb->getQuery()->getResult();
    }


    /* public function  findHomeSearchOther($location , $type){
         $qb = $this->createQueryBuilder('b');
         $qb->select(array('b'));
         // $qb->join('b.statusimmo', 's');
         $qb->join('b.typeimmo', 't');
         $qb->join('b.villes', 'v');
         $qb->where('b.locked = :locked');
         $qb->andWhere('t.id = :typeimmo');
         $qb->andWhere('v.id = :villes');
         $qb->setParameters(
             array(
             'locked' => false,
             'typeimmo' => $type,
             'villes' => $location));
         $qb->orderBy('b.id' , 'DESC');
         return $qb->getQuery()->getResult();
     }*/
    public function  findHomeSearchOther($location , $type){
        $qb = $this->createQueryBuilder('b');
        $qb->select(array('b'));
        //* $qb->join('b.statusimmo', 's');
      //  $qb->join('b.typeimmo', 't');
      //  $qb->join('b.villes', 'v');
        $qb->where('b.locked = :locked');
       // $qb->andWhere('t.id = :typeimmo');
        $qb->andWhere('b.ville LIKE :ville');
        $qb->setParameters(
            array(
                'locked' => false,
           //     'typeimmo' => $type,
                'ville' => $location));
        $qb->orderBy('b.prix' , 'ASC');
        return $qb->getQuery()->getResult();
    }

    public function  findMenuRightSearch($location , $type, $status, $minprice,$maxprice ){
        $qb = $this->createQueryBuilder('b');
        $qb->select(array('b'));
        $qb->join('b.statusimmo', 's');
        $qb->join('b.typeimmo', 't');
        $qb->join('b.villes', 'v');
        $qb->where('b.locked = :locked');
        $qb->andWhere('s.id = :status');
        $qb->andWhere('t.id = :typeimmo');
        $qb->andWhere('v.id = :villes');
        $qb->andWhere('b.prix >= :minprix');
        $qb->andWhere('b.prix <= :maxprix');
        $qb->setParameters(array('locked' => false, 'status'=> $status ,
            'typeimmo' => $type,
            'villes' => $location,
            'minprix' => $minprice,
            'maxprix' => $maxprice
        ));
        $qb->orderBy('b.id' , 'DESC');
        return $qb->getQuery()->getResult();
    }

    public function  CategoriBien($cat){
        $qb = $this->createQueryBuilder('b');
        $qb->select(array('b'));
        $qb->join('b.statusimmo', 's');
        $qb->join('b.typeimmo', 't');;
        $qb->Where('t.slug = :cat');
        $qb->setParameter('cat', $cat);
        $qb->orderBy('b.id' , 'DESC');
        return $qb->getQuery()->getResult();
    }

    public function  SortByCountry($pays, $cat)
    {
        $qb = $this->createQueryBuilder('b');
        $qb->select('b')
        ->join('b.pays', 'p')
        ->join('b.typeimmo', 't')
        ->Where('p.id = :pays')
        ->andWhere('t.slug = :cat')
        ->setParameters(array('pays'=>$pays, 'cat'=>$cat))
        ->orderBy('b.id' , 'DESC');
        return $qb->getQuery()->getResult();

    }
}
